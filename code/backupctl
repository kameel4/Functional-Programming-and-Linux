#!/usr/bin/env python3
import sys
import subprocess as sp
import configparser as cp
import os

CONFIG_FILE = "/etc/backup.conf"
SERVICE_NAME = "backup_daemon.service"

def show_status():
    print("=== Service status ===")
    sp.run(['systemctl', 'status', SERVICE_NAME, '--no-pager'])
    print('=== Recent logs ===')
    sp.run(['journalctl', '-u', SERVICE_NAME, '-n', '10', '--no-pager'])

def edit_config(key, value):
    config = cp.ConfigParser()
    config.read(CONFIG_FILE)

    if 'settings' not in config:
        config['settings'] = {}
    
    config['settings'][key] = value
    
    with open(CONFIG_FILE, 'w') as f:
        config.write(f)
    
    print(f"Config updated: {key} = {value}")
    sp.run(['systemctl', 'restart', SERVICE_NAME])

def usage():
    print(f""" Usage: {sys.argv[0]} [command] [args]


Commands:
    start               - start daemon
    stop                - stop daemon
    restart             - restart daemon
    status              - show status and last logs
    set <key> <value>   - change configuration parameter (source, backup, interval)     
""")

def main():
    if len(sys.argv) < 2:
        usage()
        sys.exit(1)
    
    cmd = sys.argv[1]
    
    if cmd == "start":
        sp.run(['systemctl', 'start', SERVICE_NAME])
    elif cmd == "stop":
        sp.run(['systemctl', 'stop', SERVICE_NAME])
    elif cmd == "restart":
        sp.run(['systemctl', 'restart', SERVICE_NAME])
    elif cmd == "status":
        show_status()
    elif cmd == "set":
        if len(sys.argv) != 4:
            print('Usage: set <key> <value>')
            sys.exit(1)
        key, value = sys.argv[2], sys.argv[3]
        edit_config(key, value)
    else:
        usage()

if __name__ == "__main__":
    main()








